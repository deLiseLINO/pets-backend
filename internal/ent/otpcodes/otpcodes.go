// Code generated by ent, DO NOT EDIT.

package otpcodes

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the otpcodes type in the database.
	Label = "otp_codes"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldEmail holds the string denoting the email field in the database.
	FieldEmail = "email"
	// FieldNextSendTime holds the string denoting the next_send_time field in the database.
	FieldNextSendTime = "next_send_time"
	// FieldExparationTime holds the string denoting the exparation_time field in the database.
	FieldExparationTime = "exparation_time"
	// Table holds the table name of the otpcodes in the database.
	Table = "otp_codes"
)

// Columns holds all SQL columns for otpcodes fields.
var Columns = []string{
	FieldID,
	FieldCode,
	FieldEmail,
	FieldNextSendTime,
	FieldExparationTime,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the OtpCodes queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByCode orders the results by the code field.
func ByCode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCode, opts...).ToFunc()
}

// ByEmail orders the results by the email field.
func ByEmail(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEmail, opts...).ToFunc()
}

// ByNextSendTime orders the results by the next_send_time field.
func ByNextSendTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldNextSendTime, opts...).ToFunc()
}

// ByExparationTime orders the results by the exparation_time field.
func ByExparationTime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExparationTime, opts...).ToFunc()
}
